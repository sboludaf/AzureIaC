{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ProjectName": {
            "type": "string",
            "metadata": {
                "description": "Name of project"
            }
        },
        "EnvironmentName": {
            "type": "string",
            "metadata": {
                "description": "Name of environment for deploy"
            }
        },
        "SQLServerADUser": {
            "type": "string",
            "metadata": {
                "description": "Database Active Directory User Admin Name"
            }
        },
        "SQLServerADUserOID": {
            "type": "string",
            "metadata": {
                "description": "Database Active Directory User Admin Object ID"
            }
        },
        "SQLServerUser": {
            "type": "string",
            "metadata": {
                "description": "Database User Admin Name"
            }
        },
        "SQLServerPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database User Admin Password"
            }
        },
        "SQLServerVersion": {
            "type": "string",
            "metadata": {
                "description": "Database User Admin Name"
            },
            "allowedValues": [
                "12.0"
            ]
        }
    },
    "functions": [],
    "variables": {
        "SQLServerName": "[concat(parameters('ProjectName'), '-', parameters('EnvironmentName'), '-server')]",
        "SQLElasticPoolName": "[concat(parameters('ProjectName'), '-', parameters('EnvironmentName'), '-ep')]",
        "SQLDatabaseName": "[concat(parameters('ProjectName'), '-', parameters('EnvironmentName'), '-database')]"
    },
    "resources": [
        //-- SQL Server
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2014-04-01",
            "name": "[variables('SQLServerName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Project": "[parameters('ProjectName')]",
                "Environment": "[parameters('EnvironmentName')]"
            },
            "properties": {
                "administratorLogin": "[parameters('SQLServerUser')]",
                "administratorLoginPassword": "[parameters('SQLServerPassword')]",
                "version": "[parameters('SQLServerVersion')]"
            },
            "resources": [
                {
                    "type": "elasticPools",
                    "apiVersion": "2017-10-01-preview",
                    "name": "[variables('SQLElasticPoolName')]",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "Project": "[parameters('ProjectName')]",
                        "Environment": "[parameters('EnvironmentName')]"
                    },
                    "properties": {
                        "licenseType": "LicenseIncluded"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ]
                },
                {
                    "type": "databases",
                    "apiVersion": "2014-04-01",
                    "name": "[variables('SQLDatabaseName')]",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "Project": "[parameters('ProjectName')]",
                        "Environment": "[parameters('EnvironmentName')]"
                    },
                    "properties": {
                        // The collation of the database. If createMode is not Default, this value is ignored.
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        // Specifies the mode of database creation.
                        "createMode": "Default",
                        // The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property.
                        "requestedServiceObjectiveName": "ElasticPool",
                        // The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
                        "elasticPoolName": "[variables('SQLElasticPoolName')]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]",
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName') ,'/elasticpools/', variables('SQLElasticPoolName'))]"
                    ]
                },
                // Allow Azure Services Connection
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01",
                    "name": "AllowAllWindowsAzureIps",
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ]
                },
                // Create an AD Administrator user
                {
                    "type": "administrators",
                    "apiVersion": "2014-04-01",
                    "name": "ActiveDirectory",
                    "properties": {
                        // The type of administrator. - ActiveDirectory
                        "administratorType": "ActiveDirectory",
                        // The server administrator login value.
                        "login": "[parameters('SQLServerADUser')]",
                        // The server administrator Sid (Secure ID). - globally unique identifier
                        "sid": "[parameters('SQLServerADUserOID')]",
                        // The server Active Directory Administrator tenant id. - globally unique identifier
                        "tenantId": "[subscription().tenantId]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ]
                }
            ]
        }
    ],
    "outputs": {}
}